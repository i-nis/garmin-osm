## -------------------------------------------------------------------
# Relations style file for applying rules on OSM relations.
#
# (C) 2012 - 2022 Martin Andres Gomez Gimenez <mggimenez@nis.com.ar>
# Distributed under the terms of the GNU General Public License v3
#
# To verify style:
# java -jar mkgmap/mkgmap.jar --style-file=styles/ --style=default_ar --check-styles --list-styles
#
# Any line prefaced with # is a comment and will not be applied.
# Each line is a rule, of the generalised format:
#  OSM_tag(s)_to_match  [Garmin_type_code resolution]
# See http://wiki.openstreetmap.org/wiki/Mkgmap/help/style_rules
# and http://wiki.openstreetmap.org/wiki/Mkgmap/help/Custom_styles
# for more information.

# Names of administrative boundaries.
# We could want to sort the relations in ascending order of admin_level
# and alphabetically by name first.
# Currently, the matching relations will be processed and the names
# appended to the boundary lines in an arbitrary order.

(type=boundary | type=multipolygon) & boundary=administrative & name=*
{ apply
  {
    set mkgmap:boundary_name='$(mkgmap:boundary_name)/${name}' | '${name}';
  }
}

# Public transportation routes.
# We could want to sort the matching relations by ref first.
type=route
& (route=bus|route=trolleybus|route=ferry|route=subway|route=train|route=tram)
& (ref=* | name=*)
{
  add ref='${name}'; # if ref is missing, use name
  # Append the ref of the route relation to the route_ref attribute of
  # the member nodes recursively (even to members of subrelations).
  # Stops can be grouped within subrelations comprising the vehicle
  # stop node and the passenger wait node.
  apply { # node role ~ '(start_|end_)stop'
		set route_ref='$(route_ref);${ref|not-contained:;:route_ref}' | '$(route_ref)' | '${ref}';
    # In route relations, stops may be defined as relations that group
    # the passenger wait area and the vehicle stop area.  If such
    # subrelations exist, copy the ref to them too.
    set mkgmap:relref='${ref}';

    apply role=passengers {
      set route_ref='$(route_ref),${mkgmap:relref}' | '${mkgmap:relref}';
    }

    delete mkgmap:relref;
  }
  # We could want to copy the route relation name to unnamed route=ferry ways.
  # apply way { add name='${name}' }
}

# Rutas nacionales Argentinas
route=road & network=AR:national {
	apply {
		add ref='${ref}';
		add network='AR:national';
        add mkgmap:fast_road=yes;
	}
}

# Rutas provinciales Argentinas
route=road & network=AR:provincial {
	apply {
		add ref='${ref}';
		add network='AR:provincial';
        add mkgmap:fast_road=yes;
	}
}

# Rutas provinciales secundarias Argentinas
route=road & network=AR:provincial:secondary {
	apply {
		add ref='${ref}';
		add network='AR:provincial:secondary';
        add mkgmap:fast_road=yes;
	}
}

# Rutas federales Brasile√±as
route=road & network=BR {
	apply {
		add ref='${ref}';
		add network='BR';
        add mkgmap:fast_road=yes;
	}
}

#any highway
type=route & route=road & historic!=yes & ref=*
{
    apply {
        add ref='${ref}';
    }
}

